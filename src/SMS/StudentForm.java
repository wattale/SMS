/*
 * StudentForm.java
 *
 * Created on February 5, 2011, 8:21 PM
 */

package SMS;

/**
 *
 * @author  Lasitha
 */
import java.awt.Color;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
public class StudentForm extends javax.swing.JFrame {
    
    private AdminForm adminForm;
    
    private Component frame;
    private LogIn logIn;
     private ClientMnpltn clnt;
     private BufferedImage bufImg;
     private byte[] bufImgArray;
    /** Creates new form StudentForm */
    public StudentForm(AdminForm adminForm, ClientMnpltn clnt) {
        this.adminForm = adminForm;
        initComponents();
        photoLabel.setBounds(0, 0, 20, 20);
        photoLabel.setForeground(Color.BLUE);
        photoLabel.setVisible(true);
        this.clnt = clnt;
    }
  
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        indexTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nameWithInTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fNameTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        yearTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        monthTF = new javax.swing.JTextField();
        dateTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        homeAddTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        telephoneTF = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        genderCB = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        upLoadButton = new javax.swing.JButton();
        profilePicLabel = new javax.swing.JLabel();
        picuploadButton = new javax.swing.JButton();
        photoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(10, 5, 20, 20));
        setResizable(false);

        jLabel1.setText("Index");

        jLabel2.setText("Name with Initials");

        jLabel4.setText("First Name");

        fNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameTFActionPerformed(evt);
            }
        });

        jLabel3.setText("Date Of Birth");

        jLabel5.setText("Year");

        jLabel6.setText("Month");

        jLabel7.setText("Date");

        jLabel8.setText("Gender");

        jLabel9.setText("Home Address");

        jLabel10.setText("Telephone Number");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        genderCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Male", "Female" }));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        upLoadButton.setText("UpLoad");
        upLoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upLoadButtonActionPerformed(evt);
            }
        });

        profilePicLabel.setText("Profile Picture");

        picuploadButton.setText("Upload");
        picuploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picuploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(375, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(yearTF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(monthTF, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(dateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(359, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(profilePicLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel9))
                                    .addComponent(upLoadButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(homeAddTF, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                    .addComponent(telephoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(saveButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(editButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cancelButton))
                                    .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel5)
                                .addGap(54, 54, 54)
                                .addComponent(jLabel6)
                                .addGap(62, 62, 62)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(indexTF, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                    .addComponent(fNameTF, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                    .addComponent(nameWithInTF, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(picuploadButton)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(profilePicLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(picuploadButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchButton)
                    .addComponent(indexTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameWithInTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(homeAddTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(telephoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton)
                    .addComponent(editButton)
                    .addComponent(upLoadButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void fNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameTFActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_fNameTFActionPerformed

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
// TODO add your handling code here:
    adminForm.setVisible(true);
    this.setVisible(false);
    this.dispose();
 
    
    
    
}//GEN-LAST:event_cancelButtonActionPerformed
public void enableAddStudentMode(){
    searchButton.setVisible(false);
    editButton.setVisible(false);
    upLoadButton.setVisible(false);
    picuploadButton.setVisible(false);
    photoLabel.setVisible(false);
    System.out.println("Ok.. enabaling Add Student Mood");

  
    
}



public void enableEditStudentMode(){
    
    nameWithInTF.setText("DISABLED");
    nameWithInTF.setEnabled(false);
    fNameTF.setText("DISABLED");
    fNameTF.setEnabled(false);
    yearTF.setText("DISABLED");
    yearTF.setEnabled(false);
    monthTF.setText("DISABLED");
    monthTF.setEnabled(false);
    dateTF.setText("DISABLED");
    dateTF.setEnabled(false);
    genderCB.setEnabled(false);
    homeAddTF.setText("DISABLED");
    homeAddTF.setEnabled(false);
    telephoneTF.setText("DISABLED");
    telephoneTF.setEnabled(false);
    indexTF.requestFocus();
    saveButton.setVisible(false);
    editButton.setVisible(false);
    upLoadButton.setVisible(false);
    picuploadButton.setVisible(false);
}


private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
// TODO add your handling code here:
    if(indexTF.getText().equalsIgnoreCase("")|nameWithInTF.getText().equalsIgnoreCase("")|fNameTF.getText().equalsIgnoreCase("")|yearTF.getText().equalsIgnoreCase("")|monthTF.getText().equalsIgnoreCase("")|dateTF.getText().equalsIgnoreCase("")|genderCB.getSelectedIndex()==0|homeAddTF.getText().equalsIgnoreCase("")|telephoneTF.getText().equalsIgnoreCase("")){
        JOptionPane.showMessageDialog(frame,"Fill all the spaces before saving the student","Error",JOptionPane.ERROR_MESSAGE);
        
        
    }else{
    int n = JOptionPane.showConfirmDialog(frame,"Are you sure you want add this Student record?","Verification",JOptionPane.YES_NO_OPTION);
    if(n== JOptionPane.YES_OPTION){
                try {
                    Student newStudent = new Student(indexTF.getText(), nameWithInTF.getText(), fNameTF.getText(), yearTF.getText() + "/" + monthTF.getText() + "/" + dateTF.getText(), (String) genderCB.getSelectedItem(), homeAddTF.getText(), telephoneTF.getText());
                    boolean added = clnt.saveStudent(newStudent);
                    if (added) {
                        JOptionPane.showMessageDialog(frame, "Added successfully, click ok to continue", "Added Success", JOptionPane.OK_OPTION);

                        clear();
                    } else {
                        JOptionPane.showMessageDialog(frame, "Error occured while adding the new Student", "Error", JOptionPane.ERROR_MESSAGE);
                        clear();
                        indexTF.requestFocus();
                    }
                } catch (IOException ex) {
                    Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
                }
    
    }
    }
    
}//GEN-LAST:event_saveButtonActionPerformed

private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        try {
// TODO add your handling code here:

            Student student = clnt.checkStudent(indexTF.getText());
            if (student.getIsValid()) {
                indexTF.setEnabled(true);
                indexTF.setText(student.getIndex());
                indexTF.setEditable(false);
                nameWithInTF.setEnabled(true);
                nameWithInTF.setText(student.getNameWithIn());
                nameWithInTF.setEditable(false);
                fNameTF.setEnabled(true);
                fNameTF.setText(student.getFName());
                fNameTF.setEditable(false);
                String[] dOB = student.getDateOfBirth().split("/");
                yearTF.setEnabled(true);
                yearTF.setText(dOB[0]);
                yearTF.setEditable(false);
                monthTF.setEnabled(true);
                monthTF.setText(dOB[1]);
                monthTF.setEditable(false);
                dateTF.setEnabled(true);
                dateTF.setText(dOB[2]);
                dateTF.setEditable(false);
                genderCB.setEnabled(true);
                genderCB.setSelectedItem((String) student.getGender());
                genderCB.setEditable(false);
                homeAddTF.setEnabled(true);
                homeAddTF.setText(student.getHomeAddress());
                homeAddTF.setEditable(false);
                telephoneTF.setEnabled(true);
                telephoneTF.setText(student.getTelephone());
                telephoneTF.setEditable(false);
                editButton.setVisible(true);
                setImage(student.getImage());
                upLoadButton.setVisible(false);
                profilePicLabel.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(frame, "There's no such student having entered index", "Error", JOptionPane.ERROR_MESSAGE);
                indexTF.setText("");
                indexTF.requestFocus();
            }
        } catch (IOException ex) {
            Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
}//GEN-LAST:event_searchButtonActionPerformed

public void setImage(byte[] img){
        this.bufImg = this.bytesToImage(img);
        bufImgArray= img;

        photoLabel.setIcon(new ImageIcon(bufImg.getScaledInstance(88, 80, BufferedImage.SCALE_AREA_AVERAGING)));

    }



  public BufferedImage bytesToImage(byte[] byteImage){
        BufferedImage bImageFromConvert = null;
        InputStream in = new ByteArrayInputStream(byteImage);
        try{
	bImageFromConvert = ImageIO.read(in);
        }catch(Exception e){
            System.out.println("byte array error");
        }
        return bImageFromConvert;
    }


private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
// TODO add your handling code here:
    searchButton.setVisible(false);
    nameWithInTF.setEditable(true);
    fNameTF.setEditable(true);
    yearTF.setEditable(true);
    monthTF.setEditable(true);
    dateTF.setEditable(true);
    genderCB.setEditable(true);
    homeAddTF.setEditable(true);
    telephoneTF.setEditable(true);
    editButton.setEnabled(false);
    upLoadButton.setVisible(true);
    picuploadButton.setVisible(true);
    upLoadButton.setVisible(true);
    
}//GEN-LAST:event_editButtonActionPerformed

private void upLoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upLoadButtonActionPerformed
// TODO add your handling code here:
    if(nameWithInTF.getText().equalsIgnoreCase("")|fNameTF.getText().equalsIgnoreCase("")|yearTF.getText().equalsIgnoreCase("")|monthTF.getText().equalsIgnoreCase("")|dateTF.getText().equalsIgnoreCase("")|genderCB.getSelectedIndex()==0|homeAddTF.getText().equalsIgnoreCase("")|telephoneTF.getText().equalsIgnoreCase("")){
         JOptionPane.showMessageDialog(frame,"Fill all the spaces before UpDating the student","Error",JOptionPane.ERROR_MESSAGE);
    }else{
        int n = JOptionPane.showConfirmDialog(frame,"Are you sure you want Update this Student record?","Verification",JOptionPane.YES_NO_OPTION);
        if(n == JOptionPane.YES_OPTION){
                try {
                    Student student = new Student(indexTF.getText(), nameWithInTF.getText(), fNameTF.getText(), yearTF.getText() + "/" + monthTF.getText() + "/" + dateTF.getText(), (String) genderCB.getSelectedItem(), homeAddTF.getText(), telephoneTF.getText(),bufImgArray);

                    boolean upDated = clnt.upDate(student);
                    if (upDated) {
                        JOptionPane.showMessageDialog(frame, "SuccessFully UpDated the Student Info", "SuccessFul", JOptionPane.INFORMATION_MESSAGE);
                        

                        indexTF.setEditable(true);
                        indexTF.setText("");
                        searchButton.setVisible(true);
                        indexTF.requestFocus();
                        this.enableEditStudentMode();
                        photoLabel.setIcon(null);
                        profilePicLabel.setVisible(false);
                       
                    } else {
                        JOptionPane.showMessageDialog(frame, "Erro occured while UpDating info", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            
        }
    }
    
    
}//GEN-LAST:event_upLoadButtonActionPerformed

private void picuploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picuploadButtonActionPerformed
// TODO add your handling code here:
    final JFileChooser fc = new JFileChooser();
      fc.setAcceptAllFileFilterUsed(false);
      fc.setFileFilter(new SMS.ImageFilter());

    int status = fc.showOpenDialog(this);

    try {
        if (status == JFileChooser.APPROVE_OPTION) {
            BufferedImage temp = ImageIO.read(fc.getSelectedFile());
            this.setImage(this.imageToBytes(temp));
            picuploadButton.setVisible(false);
            
        }

    } catch (IOException e) {
        e.printStackTrace();
   }
       
}//GEN-LAST:event_picuploadButtonActionPerformed

 public byte[] imageToBytes(BufferedImage img){
        byte[] imageInByte = null;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try{
	ImageIO.write( img, "jpg", baos );
	baos.flush();
	imageInByte = baos.toByteArray();
	baos.close();}
        catch(Exception e){

        }
        return imageInByte;
    }


public void clear(){
    indexTF.setText("");
    nameWithInTF.setText("");
    fNameTF.setText("");
    yearTF.setText("");
    monthTF.setText("");
    dateTF.setText("");
    genderCB.setSelectedIndex(0);
    homeAddTF.setText("");
    telephoneTF.setText("");
}
   
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dateTF;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField fNameTF;
    private javax.swing.JComboBox genderCB;
    private javax.swing.JTextField homeAddTF;
    private javax.swing.JTextField indexTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField monthTF;
    private javax.swing.JTextField nameWithInTF;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JButton picuploadButton;
    private javax.swing.JLabel profilePicLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField telephoneTF;
    private javax.swing.JButton upLoadButton;
    private javax.swing.JTextField yearTF;
    // End of variables declaration//GEN-END:variables

}
